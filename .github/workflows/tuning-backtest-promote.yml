name: Tuning Backtest Promote

on:
  workflow_dispatch:
    inputs:
      grid:
        description: "Grid YAML path"
        required: false
        default: "configs/tune_grid_ci.yaml"
      base_config:
        description: "Base replay config path"
        required: false
        default: "configs/replay_ci.yaml"
      train_start:
        description: "Train start date (YYYY-MM-DD)"
        required: false
        default: "2022-01-01"
      train_end:
        description: "Train end date (YYYY-MM-DD)"
        required: false
        default: "2022-06-30"
      val_start:
        description: "Validation start date (YYYY-MM-DD)"
        required: false
        default: "2022-07-01"
      val_end:
        description: "Validation end date (YYYY-MM-DD)"
        required: false
        default: "2022-09-30"
      python-version:
        description: "Python version"
        required: false
        default: "3.11"

concurrency:
  group: tuning-backtest-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  run-and-promote:
    name: Run backtest.tune and promote params
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ inputs.python-version || '3.11' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version || '3.11' }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backtest tuning
        env:
          GRID: ${{ inputs.grid || 'configs/tune_grid_ci.yaml' }}
          BASE: ${{ inputs.base_config || 'configs/replay_ci.yaml' }}
          TR_S: ${{ inputs.train_start || '2022-01-01' }}
          TR_E: ${{ inputs.train_end || '2022-06-30' }}
          VA_S: ${{ inputs.val_start || '2022-07-01' }}
          VA_E: ${{ inputs.val_end || '2022-09-30' }}
        run: |
          set -euo pipefail
          OUT_DIR="backtest_out/${{ github.run_id }}"
          python -m backtest.tune \
            --grid "$GRID" \
            --base-config "$BASE" \
            --out "$OUT_DIR" \
            --train-start "$TR_S" \
            --train-end "$TR_E" \
            --val-start "$VA_S" \
            --val-end "$VA_E" \
            --top-k 3
          echo "OUT_DIR=$OUT_DIR" >> "$GITHUB_ENV"

      - name: Promote mapped params to baseline
        run: |
          set -euo pipefail
          BEST_JSON="${OUT_DIR}/summary/best_params.json"
          test -f "$BEST_JSON" || { echo '::error::best_params.json not found'; exit 2; }
          python -m scripts.engine.apply_backtest_params --best-params "$BEST_JSON" --baseline config/policy_default.json

      - name: Run tests (must pass)
        run: |
          ./broker.sh tests

      - name: Commit and push baseline changes
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin "$BRANCH_NAME"
          git rebase "origin/$BRANCH_NAME" || { echo 'Rebase failed, attempting to continue'; }
          git add config/policy_default.json
          git commit -m "tune(backtest): promote mapped params to baseline" || echo "No baseline changes to commit"
          for i in 1 2 3; do
            if git push origin "$BRANCH_NAME"; then exit 0; fi
            echo "Push failed, retry $i/3 after rebase"
            git fetch origin "$BRANCH_NAME"
            git rebase "origin/$BRANCH_NAME" || true
            sleep 2
          done
          echo "::error::Failed to push after retries"; exit 1

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: backtest-tuning-artifacts
          path: |
            backtest_out/
