name: Generate Policy Overrides

on:
  workflow_dispatch:
    inputs:
      rounds:
        description: "Number of Codex analysis rounds (1-3)"
        required: false
        default: "1"
      python-version:
        description: "Python version"
        required: false
        default: "3.11"
      node-version:
        description: "Node.js version for Codex CLI"
        required: false
        default: "20"

concurrency:
  group: generate-policy-overrides-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  generate:
    name: Generate policy_overrides.json via Codex CLI
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      BROKER_CX_GEN_ROUNDS: ${{ github.event.inputs.rounds || '1' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ github.event.inputs.python-version || '3.11' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python-version || '3.11' }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Node ${{ github.event.inputs.node-version || '20' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node-version || '20' }}

      - name: Install Codex CLI
        run: |
          npm install -g @openai/codex@latest
          codex --version || true

      - name: Configure Codex auth from secret
        env:
          CODEX_AUTH_JSON: ${{ secrets.CODEX_AUTH_JSON }}
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.codex"
          if [ -z "${CODEX_AUTH_JSON:-}" ]; then
            echo "::error::Missing secret CODEX_AUTH_JSON"; exit 1; fi
          printf '%s' "$CODEX_AUTH_JSON" > "$HOME/.codex/auth.json"
          chmod 600 "$HOME/.codex/auth.json"

      - name: Install Codex config from repo
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.codex"
          if [ -f .codex/config.toml ]; then
            cp -f .codex/config.toml "$HOME/.codex/config.toml"
            chmod 600 "$HOME/.codex/config.toml"
          else
            echo "::warning::.codex/config.toml not found in repo; proceeding without pinned config"
          fi

      - name: Generate policy_overrides via Codex
        run: |
          set -euo pipefail
          echo "Running rounds=$BROKER_CX_GEN_ROUNDS"
          python -m scripts.ai.generate_policy_overrides

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: policy-overrides-generated
          path: |
            config/policy_overrides.json
            out/debug/**
